{"ast":null,"code":"\"use client\";\n\nvar _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nexport function useWallet() {\n  _s();\n  const [wallet, setWallet] = useState({\n    isConnected: false,\n    address: null,\n    isConnecting: false\n  });\n  useEffect(() => {\n    // Check if wallet was previously connected\n    const savedAddress = localStorage.getItem(\"walletAddress\");\n    if (savedAddress) {\n      setWallet({\n        isConnected: true,\n        address: savedAddress,\n        isConnecting: false\n      });\n    }\n  }, []);\n  const connect = async () => {\n    setWallet(prev => ({\n      ...prev,\n      isConnecting: true\n    }));\n\n    // Simulate wallet connection\n    await new Promise(resolve => setTimeout(resolve, 2000));\n    const mockAddress = \"0x1234567890123456789012345678901234567890\";\n    localStorage.setItem(\"walletAddress\", mockAddress);\n    setWallet({\n      isConnected: true,\n      address: mockAddress,\n      isConnecting: false\n    });\n  };\n  const disconnect = () => {\n    localStorage.removeItem(\"walletAddress\");\n    setWallet({\n      isConnected: false,\n      address: null,\n      isConnecting: false\n    });\n  };\n  const formatAddress = address => {\n    return `${address.slice(0, 6)}...${address.slice(-4)}`;\n  };\n  return {\n    ...wallet,\n    connect,\n    disconnect,\n    formatAddress\n  };\n}\n_s(useWallet, \"ymtKCwvowMG9U0/2qDlFsY+2cpc=\");","map":{"version":3,"names":["_s","$RefreshSig$","useState","useEffect","useWallet","wallet","setWallet","isConnected","address","isConnecting","savedAddress","localStorage","getItem","connect","prev","Promise","resolve","setTimeout","mockAddress","setItem","disconnect","removeItem","formatAddress","slice"],"sources":["/home/yash/Chainlink-Chromion/frontend/src/hooks/useWallet.js"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from \"react\"\n\nexport function useWallet() {\n  const [wallet, setWallet] = useState({\n    isConnected: false,\n    address: null,\n    isConnecting: false,\n  })\n\n  useEffect(() => {\n    // Check if wallet was previously connected\n    const savedAddress = localStorage.getItem(\"walletAddress\")\n    if (savedAddress) {\n      setWallet({\n        isConnected: true,\n        address: savedAddress,\n        isConnecting: false,\n      })\n    }\n  }, [])\n\n  const connect = async () => {\n    setWallet((prev) => ({ ...prev, isConnecting: true }))\n\n    // Simulate wallet connection\n    await new Promise((resolve) => setTimeout(resolve, 2000))\n\n    const mockAddress = \"0x1234567890123456789012345678901234567890\"\n    localStorage.setItem(\"walletAddress\", mockAddress)\n\n    setWallet({\n      isConnected: true,\n      address: mockAddress,\n      isConnecting: false,\n    })\n  }\n\n  const disconnect = () => {\n    localStorage.removeItem(\"walletAddress\")\n    setWallet({\n      isConnected: false,\n      address: null,\n      isConnecting: false,\n    })\n  }\n\n  const formatAddress = (address) => {\n    return `${address.slice(0, 6)}...${address.slice(-4)}`\n  }\n\n  return {\n    ...wallet,\n    connect,\n    disconnect,\n    formatAddress,\n  }\n}\n"],"mappings":"AAAA,YAAY;;AAAA,IAAAA,EAAA,GAAAC,YAAA;AAEZ,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,OAAO,SAASC,SAASA,CAAA,EAAG;EAAAJ,EAAA;EAC1B,MAAM,CAACK,MAAM,EAAEC,SAAS,CAAC,GAAGJ,QAAQ,CAAC;IACnCK,WAAW,EAAE,KAAK;IAClBC,OAAO,EAAE,IAAI;IACbC,YAAY,EAAE;EAChB,CAAC,CAAC;EAEFN,SAAS,CAAC,MAAM;IACd;IACA,MAAMO,YAAY,GAAGC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;IAC1D,IAAIF,YAAY,EAAE;MAChBJ,SAAS,CAAC;QACRC,WAAW,EAAE,IAAI;QACjBC,OAAO,EAAEE,YAAY;QACrBD,YAAY,EAAE;MAChB,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,OAAO,GAAG,MAAAA,CAAA,KAAY;IAC1BP,SAAS,CAAEQ,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAEL,YAAY,EAAE;IAAK,CAAC,CAAC,CAAC;;IAEtD;IACA,MAAM,IAAIM,OAAO,CAAEC,OAAO,IAAKC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC;IAEzD,MAAME,WAAW,GAAG,4CAA4C;IAChEP,YAAY,CAACQ,OAAO,CAAC,eAAe,EAAED,WAAW,CAAC;IAElDZ,SAAS,CAAC;MACRC,WAAW,EAAE,IAAI;MACjBC,OAAO,EAAEU,WAAW;MACpBT,YAAY,EAAE;IAChB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMW,UAAU,GAAGA,CAAA,KAAM;IACvBT,YAAY,CAACU,UAAU,CAAC,eAAe,CAAC;IACxCf,SAAS,CAAC;MACRC,WAAW,EAAE,KAAK;MAClBC,OAAO,EAAE,IAAI;MACbC,YAAY,EAAE;IAChB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMa,aAAa,GAAId,OAAO,IAAK;IACjC,OAAO,GAAGA,OAAO,CAACe,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,MAAMf,OAAO,CAACe,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;EACxD,CAAC;EAED,OAAO;IACL,GAAGlB,MAAM;IACTQ,OAAO;IACPO,UAAU;IACVE;EACF,CAAC;AACH;AAACtB,EAAA,CAtDeI,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}